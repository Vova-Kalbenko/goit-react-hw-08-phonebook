{"version":3,"file":"static/js/297.d6252d7a.chunk.js","mappings":"mLACA,EAA6B,2B,SCqB7B,EApBe,WACX,OAAQ,+BACJ,iBAAKA,UAAWC,EAAhB,WACI,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,uBAIX,C,uLCnBD,EAAmC,oCAAnC,EAAwF,kCAAxF,EAA0I,iCAA1I,EAA4L,kCAA5L,EAA8O,iCAA9O,EAAiS,mC,SCSpRC,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,EAAmB,CACvBX,MAAAA,EACAE,SAAAA,GAGIU,EAAgB,SAAC,GAA4C,IAAD,IAAzCC,OAAgBC,EAAyB,EAA/BC,KAAiBC,EAAc,EAAdA,MAClD,OAAQF,GACN,IAAK,QACHb,EAASe,GACT,MACF,IAAK,WACHb,EAAYa,GACZ,MACF,QACE,OAAO,KAEZ,EAmBKC,EAAc,WAClBhB,EAAS,IACTE,EAAY,GACb,EAED,OACE,qBAASP,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,qBACA,kBAAMqB,SAzBW,SAAAC,GACnBA,EAAEC,iBACFhB,GAASiB,EAAAA,EAAAA,IAAMV,IAAmBW,MAAK,SAAAC,GACZ,QAArBA,EAASC,UAGY,kBAArBD,EAASC,QAITD,EAASC,QAAQC,QACnBnB,EAAS,IAAK,CAAEoB,SAAS,IACzBT,KALAU,EAAAA,GAAAA,MAAY,qDAOf,GACF,EAUiC/B,UAAWC,EAAzC,WACE,8BACA,iBAAMD,UAAWC,EAAjB,qBACE,kBACE+B,SAAUhB,EACVI,MAAOhB,EACP6B,KAAK,QACLd,KAAK,QACLe,UAAQ,EACRC,YAAY,QACZnC,UAAWC,EACXmC,aAAa,YAGjB,8BACE,iBAAMpC,UAAWC,EAAjB,uBACA,kBACE+B,SAAUhB,EACVI,MAAOd,EACP2B,KAAK,WACLd,KAAK,WACLe,UAAQ,EACRC,YAAY,WACZnC,UAAWC,EACXmC,aAAa,YAIjB,mBAAQH,KAAK,SAASjC,UAAWC,EAAjC,uBAIDW,IAAa,SAACyB,EAAA,EAAD,MAGnB,EChGD,EAAgC,iCCEnBC,EAAY,WACvB,OACE,iBAAMtC,UAAWC,EAAjB,UACE,SAACC,EAAD,KAGL,EAED,G","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/LogInPage/LogInPage.module.css?e73a","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ldsspinner\":\"Loader_ldsspinner__Px-+7\"};","import React from 'react'\nimport css from './Loader.module.css'\nconst Loader = () => {\n    return (<>\n        <div className={css.ldsspinner}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </>\n    )\n}\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"LogInFormSection\":\"LoginForm_LogInFormSection__DAdpq\",\"LogInFormTitle\":\"LoginForm_LogInFormTitle__tgZqn\",\"LogInFormForm\":\"LoginForm_LogInFormForm__t+itz\",\"LogInFormInput\":\"LoginForm_LogInFormInput__u4jFj\",\"LogInFormSpan\":\"LoginForm_LogInFormSpan__RrVpy\",\"LogInFormButton\":\"LoginForm_LogInFormButton__BbJLv\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from 'redux/auth/authOperations';\nimport { toast } from 'react-toastify';\nimport { selectAuthIsLoading } from 'redux/auth/authSelectors';\nimport Loader from 'components/Loader/Loader';\nimport css from './LoginForm.module.css'\n\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const isLoading = useSelector(selectAuthIsLoading);\n\n  const userRegisterData = {\n    email,\n    password,\n  };\n\n  const onInputChange = ({ target: { name: inputName, value } }) => {\n    switch (inputName) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    dispatch(login(userRegisterData)).then(response => {\n      if (response.payload === '404') {\n        return;\n      }\n      if (response.payload === 'Network Error') {\n        toast.error('Cannot fetch data. Check yout internet connection');\n        return;\n      }\n      if (response.payload.token) {\n        navigate('/', { replace: true });\n        onFormReset();\n      }\n    });\n  };\n\n  const onFormReset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <section className={css.LogInFormSection}>\n      <h2 className={css.LogInFormTitle}>Log In</h2>\n      <form onSubmit={onFormSubmit} className={css.LogInFormForm}>\n        <label>\n        <span className={css.LogInFormSpan}>E-mail</span>\n          <input\n            onChange={onInputChange}\n            value={email}\n            type=\"email\"\n            name=\"email\"\n            required\n            placeholder=\"Email\"\n            className={css.LogInFormInput}\n            autoComplete='off'\n          />\n        </label>\n        <label>\n          <span className={css.LogInFormSpan}>Password</span>\n          <input\n            onChange={onInputChange}\n            value={password}\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"Password\"\n            className={css.LogInFormInput}\n            autoComplete='off'\n          />\n        </label>\n\n        <button type=\"submit\" className={css.LogInFormButton}>\n          Log In\n        </button>\n      </form>\n      {isLoading && <Loader />}\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"LogInPageMain\":\"LogInPage_LogInPageMain__4c0vZ\"};","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport css from './LogInPage.module.css'\n\nexport const LogInPage = () => {\n  return (\n    <main className={css.LogInPageMain}>\n      <LoginForm />\n    </main>\n  );\n};\n\nexport default LogInPage;"],"names":["className","css","LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","isLoading","useSelector","selectAuthIsLoading","userRegisterData","onInputChange","target","inputName","name","value","onFormReset","onSubmit","e","preventDefault","login","then","response","payload","token","replace","toast","onChange","type","required","placeholder","autoComplete","Loader","LogInPage"],"sourceRoot":""}