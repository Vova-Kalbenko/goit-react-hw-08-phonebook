{"version":3,"file":"static/js/154.22407a1b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ldsspinner\":\"Loader_ldsspinner__Px-+7\"};","import React from 'react'\nimport css from './Loader.module.css'\nconst Loader = () => {\n    return (<>\n        <div className={css.ldsspinner}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </>\n    )\n}\n\nexport default Loader","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","export const selectFilter = state => state.filter.value;","// extracted by mini-css-extract-plugin\nexport default {\"PhoneBookFormSection\":\"Phonebook_PhoneBookFormSection__GD998\",\"PhoneBookFormTitle\":\"Phonebook_PhoneBookFormTitle__ELBLb\",\"PhoneBookFormForm\":\"Phonebook_PhoneBookFormForm__6eaQN\",\"PhoneBookFormInput\":\"Phonebook_PhoneBookFormInput__6dhl8\",\"PhoneBookFormSpan\":\"Phonebook_PhoneBookFormSpan__FcEu4\",\"PhoneBookFormButton\":\"Phonebook_PhoneBookFormButton__7x-b+\"};","import { useState } from 'react';\n// import { VscAdd } from 'react-icons/vsc';\n// import { Label, Input, Button } from './Phonebook.styled';\n// ==============================\nimport css from './Phonebook.module.css'\nexport const Phonebook = ({ onAddContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const state = {\n    name,\n    number,\n  };\n\n  const onInputChange = ({ target: { name: inputName, value } }) => {\n    switch (inputName) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return null;\n    }   \n  };\n\n  const onFormSubmitAddContact = e => {\n    e.preventDefault();\n    onAddContact(state);\n    onFormReset();\n  };\n\n  const onFormReset = () => {\n    setName(\"\");\n    setNumber(\"\");   \n  };\n\n  return (\n    <section className={css.PhoneBookFormSection}>\n      <form onSubmit={onFormSubmitAddContact} className={css.PhoneBookFormForm}>\n        <label>\n          <span className={css.PhoneBookFormSpan}>Name</span>\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}            \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]{4,8}*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Write name\"\n            className={css.PhoneBookFormInput}\n          />\n        </label>\n        <label>\n        <span className={css.PhoneBookFormSpan}>Number</span>\n          <input\n            onChange={onInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Write number\"\n            className={css.PhoneBookFormInput}\n          />\n        </label>\n        <button type=\"submit\" className={css.PhoneBookFormButton}>\n          Add contact\n          {/* <VscAdd /> */}\n        </button>\n      </form>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactListFormSection\":\"ContactList_ContactListFormSection__Yufk5\",\"ContactListFormTitle\":\"ContactList_ContactListFormTitle__2KDq6\",\"ContactListFormForm\":\"ContactList_ContactListFormForm__6XOAB\",\"ContactListdiv\":\"ContactList_ContactListdiv__RCvAc\",\"ContactListFormInput\":\"ContactList_ContactListFormInput__HoW6-\",\"PhoneBookFormSpan\":\"ContactList_PhoneBookFormSpan__AVSOa\",\"ContactListFormButton\":\"ContactList_ContactListFormButton__UH0dr\"};","// import { VscTrash, VscEdit } from 'react-icons/vsc';\n// import Avatar from 'react-avatar';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilterContacts } from 'redux/contacts/contacts-selectors';\n// import { Contact, Ul, BtnWrapper, Button } from './ContactList.styled';\n// import { useState } from 'react';\nimport css from './ContactList.module.css'\nimport { deleteContacts } from 'redux/contacts/contacts-operations';\n// import { Modal } from 'components/Modal/Modal';\n// ===========================\n\n\nexport const ContactList = () => {\n  //   const [isModalOpen, setIsModalOpen] = useState(false);\n  //   const [updateContactId, setUpdateContactId] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilterContacts);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  //   const onModalOpen = id => {\n  //     setIsModalOpen(true);\n  //     setUpdateContactId(id);\n  //   };\n\n  //   const onCloseModal =()=>{\n  //     setIsModalOpen(false);\n  //   }\n\n  return (\n    <section className={css.ContactListFormSection}>\n      {!contacts.length && <p>PhoneBook is empty</p>}\n      {filterContacts.length > 0 ? (\n        <ul className={css.ContactListFormForm}>\n          {filterContacts.map(({ name, number, id }) => (\n            <li key={id} data-id={id}>\n              {/* <Avatar\n                round={true}\n                size={40}\n                name={name}\n                alt={'avatar'}\n                color={'#2196f3'}\n              /> */}\n              <div className={css.ContactListdiv}>\n                <p className={css.PhoneBookFormSpan}>\n                  {name}: {number}\n                </p>\n                <button\n                  type=\"button\"\n                  name=\"deleteBtn\"\n                  onClick={() => onDeleteContact(id)}\n                >\n                  X\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        contacts.length > 0 && <p>PhoneBook is empty</p>\n      )}\n      {/* {isModalOpen&&<Modal onCloseModal={onCloseModal} updateContactId={updateContactId}/>} */}\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"FilterWrapper\":\"Filter_FilterWrapper__B1ofT\",\"FilterFormInput\":\"Filter_FilterFormInput__jJb-w\",\"FilterFormSpan\":\"Filter_FilterFormSpan__f-SYF\"};","import PropTypes from 'prop-types';\n// import { Label, Input } from './Filter.styled';\n// =============================\nimport css from './Filter.module.css'\nexport const Filter = ({ onChangeFilter }) => {\n  return (\n    <div className={css.FilterWrapper}>\n      <label>\n        <span className={css.FilterFormSpan}>Search contact</span>\n        <input onChange={e => onChangeFilter(e)} type=\"text\" name=\"filter\" placeholder='Seacrh' className={css.FilterFormInput} />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"SectionTitle\":\"Section_SectionTitle__WJ5ih\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css'\n// import {SectionPhonebook,Title} from './Section.styled';\n// ================================\nexport const Section =({title, children})=>{\n  return(\n    <section className={css.SectionTitle}>\n      <h2>{title}</h2>\n      <>{children}</>      \n    </section>\n  )\n}\n\nSection.propTypes = {\n  title:PropTypes.string.isRequired,\n  children:PropTypes.node.isRequired\n}","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport { updateFilter } from 'redux/filter/filter-slice';\nimport { addContacts } from 'redux/contacts/contacts-operations';\n\nimport { Phonebook } from '../../components/Phonebook/Phonebook';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Section } from '../../components/Section/Section';\nimport Loader from 'components/Loader/Loader';\n\n// import { toast } from 'react-toastify';\n// import { PhonebookMain } from './PhonebookPage.styled';\n// ==============================\n\nconst PhonebookPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const onAddContact = newUser => {\n    const uniqUserSearch = contacts.find(({ name }) => name === newUser.name);\n    uniqUserSearch\n      ? \n    //   tyt bil toast\n      console.log(`\"${uniqUserSearch.name}\" вже є в телефонній книзі`)\n      : dispatch(addContacts(newUser));\n  };\n\n  const onChangeFilter = e => {\n    dispatch(updateFilter(e.target.value));\n  };\n  return (\n    <main>\n      <Section title=\"PhoneBook\">\n        <Phonebook onAddContact={onAddContact} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter onChangeFilter={onChangeFilter} />\n        <ContactList />\n      </Section>\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default PhonebookPage;"],"names":["className","css","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectIsLoading","isLoading","selectFilterContacts","filter","toLowerCase","includes","Phonebook","onAddContact","useState","setName","number","setNumber","onInputChange","target","inputName","onFormReset","onSubmit","e","preventDefault","onChange","type","pattern","title","required","placeholder","ContactList","dispatch","useDispatch","useSelector","filterContacts","id","onClick","deleteContacts","onDeleteContact","Filter","onChangeFilter","Section","children","newUser","uniqUserSearch","console","log","addContacts","updateFilter","Loader"],"sourceRoot":""}